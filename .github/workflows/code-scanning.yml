name: Code Scanning

on:
  push:
    branches:
    - dev
    - master
  pull_request:
    branches:
    - dev
    - master

concurrency:
  group: "code-scanning-${{ github.head_ref || github.run_id }}-${{ github.event_name }}"
  cancel-in-progress: true

env:
  TGS_DOTNET_VERSION: 8
  TGS_DOTNET_QUALITY: ga

jobs:
  code-scanning:
    name: Run CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
    env:
      TGS_TELEMETRY_KEY_FILE: /tmp/tgs_telemetry_key.txt
    steps:
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '${{ env.TGS_DOTNET_VERSION }}.0.x'
        dotnet-quality: ${{ env.TGS_DOTNET_QUALITY }}

    - name: Checkout (Branch)
      uses: actions/checkout@v4

    - name: Read Current SHA
      id: get-pr-sha
      if: github.event_name != 'push' && github.event_name != 'schedule'
      shell: bash
      run: echo "head_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Abort if PR Merge SHA has Changed
      uses: actions/github-script@v7
      if: github.event_name != 'push' && github.event_name != 'schedule' && steps.get-pr-sha.outputs.head_sha != github.sha
      with:
        script: |
          const delay = ms => new Promise(res => setTimeout(res, ms));

          github.rest.actions.cancelWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId
          });

          while (true) {
            core.info('Waiting for workflow to cancel ...');
            await delay(5000);
          }

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp

    - name: Setup Telemetry Key File
      run: echo "fake_telemetry_key" > ${{ env.TGS_TELEMETRY_KEY_FILE }}

    - name: Build
      run: dotnet build -c ReleaseNoWindows -p:TGS_HOST_NO_WEBPANEL=true

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:csharp"
